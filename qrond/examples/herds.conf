#(pf (version 1.0))
# vim: set ft=vrml :
(config
  (taskgroup shire)
  (task shepherd
    (taskgroup shire)
    #(trigger(cron * * * * * *)(cron * * * * * *)(notice configload))
    (maxinstances 32)
    (mean donothing)
    #(mean local)
    #(command sleep 30)
    (onstart (requesttask shepherd)) # this is almost trolling the scheduler:
       # a task is not allowed to start when starting if enqueuepolicy is
       # enqueueanddiscardqueued (which is the default)
    (onstart (requesttask sheep)(requesttask sheep)(requesttask wolf(lone)))
    (onfinish (requesttask blacksheep))
    #(onfinish (requesttask shepherd)) # infinite loop
    #(herdingpolicy nowait)
    #(herdingpolicy allsuccess)
    #(enqueuepolicy enqueueall) # infinite loop
  )
  (task sheep
    (taskgroup shire)
    #(target "")(mean ssh)
    (apply sheep)
  )
  (task blacksheep
    (taskgroup shire)
    (apply sheep)
    (command "sleep $(($RANDOM%%10)); false")
    (onstart (requesttask sheep))
  )
  (task wolf
    (taskgroup shire)
    (apply sheep)
    (param word wooooooh)
  )
  (tasktemplate sheep
    (mean local)
    (maxinstances 64)
    (enqueuepolicy enqueueall) # don't do that it can often be dangerous
    (command echo %word %!taskinstanceid %!herdid)
    (param word beeeeeh)
  )
 (onschedulerstart(requesttask shire.shepherd))
 (onconfigload(postnotice configload))
 (maxtotaltaskinstances 128)
 (var LANG C.UTF-8)
 (var TZ Europe/Paris)
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
)
