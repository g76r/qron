#(pf (version 1.0))
# vim: set ft=vrml :
(config
  (taskgroup shire)
  (task shepherd
    (taskgroup shire)
    #(trigger(cron * * * * * *)(cron * * * * * *)(notice configload))
    #(maxinstances 32)
    #(enqueuepolicy enqueueanddiscardqueued)
    (mean donothing)
    #(mean local)
    #(command sleep 30)
    (onplan (plantask sheep)(plantask sheep)(plantask wolf(param color black)(lone)))
    (onfinish (plantask blacksheep))
    #(onfinish (plantask shepherd)) # infinite loop
    (onfinish (log finished!))
    #(herdingpolicy nowait)
    #(herdingpolicy allsuccess)
    #(enqueuepolicy enqueueall) # infinite loop
  )
  (task sheep
    (taskgroup shire)
    #(target "")(mean ssh)
    (apply sheep)
  )
  (task blacksheep
    (taskgroup shire)
    (apply sheep)
    (command "sleep $(($RANDOM%%10)); false")
    (onstart (plantask sheep))
  )
  (task wolf
    (taskgroup shire)
    (apply sheep)
    (param word wooooooh)
    (var COLOR %color)
    (var color %color)
    (param password1 "%{=ext:secrets1:sheep}")
    (param password2 "%{=ext:secrets2:sheep}")
    (param password3 "%{=ext:secrets2:notfound:default}")
    (trigger(notice bar(param color "%[notice]color"))) # if no color param in the notice: color will be white at tasksroot level because taskinstance won't have color param
    (trigger(notice baz(param color "%color"))) #if no color param in the notice: color will be white because %color is resolved at tasksroot level when setting to taskinstance
  )
  (tasktemplate sheep
    (mean local)
    (maxinstances 64)
    #(enqueuepolicy enqueueall) # don't do that it can often be dangerous
    (param empty)
    (command echo %word %!taskinstanceid %!herdid password:%password1:%password2:%password3 "%{=default:%empty:nil}")
    (param word beeeeeh)
  )
 (onschedulerstart(plantask shire.shepherd))
 (onconfigload(postnotice configload))
 (externalparams secrets1 (file ./examples/secrets.csv))
 (externalparams secrets2 (command ./examples/secrets.sh))
 (param color white)
 (maxtotaltaskinstances 128)
 (var LANG C.UTF-8)
 (var TZ Europe/Paris)
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))

 (alerts
   (gridboard tasks
    (label Tasks Alerts)
    (pattern '^task\.(?<status>[^\.]+)\.(?<taskid>.+)$')
    (dimension taskid)
    (dimension status)
    (param gridboard.rowformat '<a href="../tasks/%1">%1</a>%{=match:%1:\.prd\.: <span class="label label-success">prod</span>:}')
   )
 )
)
