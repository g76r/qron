#(pf (version 1.0))
(config
 (param globalparam1 foobar)
 (param webconsole.title Qron Demo)
 (param webconsole.navtitle <font color=green>Qron Demo</font>)
 #(maxqueuedrequests 2)

 # tasks
 (taskgroup app1.batch
  (onstart(postnotice starting-%!taskid))
 )
 (task batch3(taskgroup app1.batch)(mean local)
  (command "/bin/false %{=ifneq:%begin::--start %begin}"
     "%{=ifneq:%end::--end %end} --dryrun %dryrun"
     "%{=ifneq:%type::--type %type}")
  (target localhost)
  (trigger(cron 2/10 * * * * *))
  (resource memory 103)
  (label Nightly export of day transactions)
  (var START %begin)
  (var END %end)
  (requestform
    (field begin
      (label First day) # ui label
      (placeholder yyyy/mm/dd) # ui placeholder/hint
      (format "2[0-9]{3}/[0-9]{2}/[0-9]{2}") # server side validation regexp
    )
    (field end
      (label Last day)
      (placeholder "yyyy/mm/dd (default: = first day)")
      (format "2[0-9]{3}/[0-9]{2}/[0-9]{2}")
    )
    (field dryrun
      (label Dry run)
      (suggestion false) # default value in ui form
      (allowedvalues;
true
false
)
      (mandatory)
    )
    (field process
      (label Process type)
      (allowedvalues /tmp/values.csv)
      (format "hey guy! format is deduced from allowedvalues, this value will
               be ignored!")
    )
    (field agree
      (label would you agree ?)
      (allowedvalues http://qron.eu/tests/values.csv)
    )
    (field color
      (label Prefered color)
      (allowedvalues
value;label;flags
f00;red
00f;blue;d
0f0;green
ff0;yellow
0ff;cyan
f0f;magenta)
    )
    (field reason
      (label Reason for manual execution)
      (mandatory)
    )
   )
 )
 (task batch4(taskgroup app1.batch)(mean ssh)(target localhost)
  (enqueuepolicy enqueueall)
  (command BARFOO=14 /tmp/foo "%{=date:yyyy}")
  (trigger(cron 1/10 * * * * *))
  (resource memory 104)
  #(onsuccess(requesttask app1.batch.batch5))
  (onsuccess(requesttask batch5))
 )
 (task batch5(taskgroup app1.batch)(mean ssh)(target localhost)
  (command /bin/true)
 )
 (task start1(taskgroup app1.batch)(mean ssh)(target localhost)
  (command /bin/true)
  (trigger(notice startup))
 )
 (task test1(taskgroup app1.batch)(mean http)(target notexist)
  (command /foo)
 )
 (host notexist(hostname notexist.localdomain))
 (task test2(taskgroup app1.batch)(mean http)(target blackhole)
  (command /foo)
 )
 (host blackhole(hostname 1.2.3.4))

 # infrastructure
 (host localhost(hostname localhost)(resource memory 128))
 (host server1(hostname server1)(resource memory 1024))
 (host server2(hostname server1)(resource memory 1024))
 (host server3(hostname server1)(resource memory 4096))
 (cluster cluster-back
   (hosts server1 server2 server3 server4)
   (balancing first)
 )

 # log
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
 (log(level info)(file "/tmp/qron-%{=date:yyyyMMdd}.log")(unbuffered))
)
