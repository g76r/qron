#(pf (version 1.0))
(config
 (param globalparam1 foobar)

 # tasks
 (taskgroup app1.batch)
 (task batch3(taskgroup app1.batch)(mean local)
  (command /bin/false)
  (target localhost)
  (trigger(cron 2/10 * * * * *))
  (resource memory 103)
 )
 (task batch4(taskgroup app1.batch)(mean ssh)(target localhost)
  (command BARFOO=14 /tmp/foo %!yyyy)
  (trigger(cron 1/10 * * * * *))
  (resource memory 104)
  #(param stderrfilter ".*")
 )
 (taskgroup app1.polling)
 (task poll1(taskgroup app1.polling)(mean http)
  (command /console/index.html?taskinstanceid=%!taskinstanceid)
  (target localhost)
  (trigger(cron 3/10 * * * * *))
  #(param method put)
  (param port 8086)
 )

 # infrastructure
 (host localhost(hostname localhost)(resource memory 128))
 (host server1(hostname server1)(resource memory 1024))
 (host server2(hostname server1)(resource memory 1024))
 (host server3(hostname server1)(resource memory 4096))
 (cluster cluster-back
   (host server1)(host server2)(host server3)(host server4)
   (balancing first)
 )

 # alerts
 (alerts
  (subscription(pattern task.failure.app1.batch.*) # task.failure.%!taskid
        (mail(address gb@localhost, root@localhost))
   )
   (subscription(pattern task.failure.app1.batch.*) # task.failure.%!taskid
        (udp(address 127.0.0.1:4242)
            (message task failure: %!alertid)
            (cancelmessage task back to success: %!alertid))
        (mail(address nobody@localhost)) # this is an error 
        (stop) # do not process next rules if this one matches
   )
   (subscription(pattern resource.exhausted.**) # resource.exhausted.%!kind.%!target
        (mail(address gb@localhost))
        #(nocancelnotify) # do not send messages when alerts are canceled
   )
   (subscription(log(address debug)) # match every alert (but those stopped before)
        (udp(address localhost:4243))
   )
   (param mindelaybetweensend 60)
   (param canceldelay 90)
 )

 # log
 #(log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}-%!HH%!MM%!SS.log"))
 (log(level debug)(file $"/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
 (log(level info)(file "/tmp/qron-%{=date:yyyyMMdd}.log")(unbuffered))
)
