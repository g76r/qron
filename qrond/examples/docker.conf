#(pf (version 1.0))
(config
  # vars will be given to docker containers as environment variables
  (var TASKINSTANCEID %!taskinstanceid)
  (var TASKID %!taskid)
  (param docker.rm false) # to debug, it's easier not to remove exited containers

  # docker tests and examples
  (taskgroup app)
  (task task2
    (info docker example running a binary command inside container (without shell)
          container has no entrypoint)
    (taskgroup app)
    (mean docker)
    (param docker.image debian:sid)
    (command '/bin/sleep 1200')
  )
  (task task3
    (info docker example running a script shell inside container
          container has no entrypoint)
    (taskgroup app)
    (mean docker)
    (param docker.image debian:sid)
    (command "/bin/bash -c '/bin/echo foo && /bin/sleep 1200'")
  )
  (task task1
    (info docker test case, outputing environment to stderr)
    (taskgroup app)
    (trigger(cron /10 * * * * *))
    (mean docker)
    (param docker.image debian:sid)
    (param foo bar)
    (var FOO %foo)
    (command '/bin/bash -c env >&2')
  )
  (task task4
    (info docker example for a container with an entrypoint)
    (taskgroup app)
    (mean docker)
    (param docker.image g76r/myimage)
    (param p4 arg4)
    (command "arg1 arg2 'arg 3' %p4")
  )
  (task task5
    (info docker example for a container with an entrypoint and without args)
    (taskgroup app)
    (mean docker)
    (param docker.image g76r/myimage)
  )
  (task task6
    (info docker example overrinding entrypoint, user and more)
    (taskgroup app)
    (mean docker)
    (param docker.image g76r/myimage)
    (param p4 arg4)
    (param docker.entrypoint /bin/bash)
    (param docker.user nobody)
    (param docker.memory 2g)
    (param docker.cpus 2)
    (param docker.name myname.%!taskinstanceid)
    (param docker.hostname "container-%{=random:10000}")
    (param docker.add-host qron:host-gateway)
    (param docker.volume "/tmp:/hosttmp %{=env:PWD}:/hostcwd")
    (param docker.ulimit nofile=65536 nproc=4096)
    (command "-c 'echo foo && env && sleep 1200'")
  )
  (task task7
    (info docker example for a container disabling pulling image before run)
    (taskgroup app)
    (mean docker)
    (param docker.pull false)
    (param docker.image myimage2)
  )

 # optional: refreshing external docker repository (useful on AWS)
 (task aws-ecr-auth-refresh
   (info "when running in an AWS EC2 instance and pulling images from AWS ECR : "
         "refresh docker auth to ecr on startup and every 4 hours (token seems valid 12 hours)")
   (taskgroup app)
   (target localhost)
   (mean ssh)
   (trigger(cron 0 0 0/4 * * *)(notice startup))
   (command '
set -C
set -e
set -o pipefail
aws ecr get-login-password | docker login -u AWS --password-stdin https://$(aws sts get-caller-identity --query Account --output text).dkr.ecr.eu-west-1.amazonaws.com
')
   (maxexpectedduration 30)
 )
 (onschedulerstart (postnotice startup))

 # logging
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
)
