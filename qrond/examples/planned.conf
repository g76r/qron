#(pf (version 1.0))
# vim: set ft=vrml :
(config
  (taskgroup shire)
  (task shepherd
    (taskgroup shire)
    (mean donothing)
    (instanceparam seed "%{=random:10000}")
    (onplan
      (plantask sheep (paramappend sheeps %!taskinstanceid)
          # paramappend is %-evaluated in the sheep context, so it's the
          # sheep's %!taskinstanceid and the appended param "sheep" is in
          # the context of the calling task, shepherd, hence making it
          # possible to maintain a list of child task ids that will be
          # used below
                      (paramappend first %!taskinstanceid))
          # will be queue immediatly because empty queuewhen means with parent
      (plantask sheep (paramappend sheeps %!taskinstanceid)
                      (queuewhen(allfinished %first)) )
          # will be queue as soon as first sheep ends
          # because at evaluation time %first will contain the id of first
          # sheep and only this id
      (plantask sheep (paramappend sheeps %!taskinstanceid)
                      (queuewhen(anyfinished %thisisempty)))
          # will be canceled immediatly because condition cannot be met
          # because %thisisempty contains nothing
      (plantask sheep (paramappend sheeps %!taskinstanceid)
                      (queuewhen(allsuccess %sheeps)))
          # will be queue as soon as third is canceled because at this
          # point the condition can no longer be met
      (plantask sheep (paramappend sheeps %!taskinstanceid)
                      (queuewhen(allfinished %sheeps)))
          # will stay planned forever because he waits for himself
          # since at evaluation time %sheeps evaluates to a list of
          # all sheeps ids, including this one
    )
    (xonstart
      (plantask wolf(lone))
          # plantask can be mixted with plantask, even if lone (out of herd)
    )
    (xonstart (log ****SHEEPS***** %sheeps %firstword %seed %timestamp))
    (xonfinish (plantask blacksheep))
    (xonfinish (log finished!))
    (xonfinish (log ****SHEEPS***** %sheeps %seed %timestamp))
  )
  (task sheep
    (taskgroup shire)
    (apply sheep)
  )
  (task blacksheep
    (taskgroup shire)
    (apply sheep)
    (command "sleep $(($RANDOM%%10)); false")
    (onstart (plantask sheep))
  )
  (task wolf
    (taskgroup shire)
    (apply sheep)
    (param word wooooooh)
  )
  (tasktemplate sheep
    (mean local)
    (maxinstances 64)
    (command echo %word %!taskinstanceid %!herdid"; sleep 20")
    (param word beeeeeh)
  )
 (onschedulerstart(plantask shire.shepherd))
 (onconfigload(postnotice configload))
 (maxtotaltaskinstances 128)
 (var LANG C.UTF-8)
 (var TZ Europe/Paris)
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
 (instanceparam timestamp "%{=date*yyyy-MM-dd hh:mm:ss,zzz}")

 (alerts
   (gridboard tasks
    (label Tasks Alerts)
    (pattern '^task\.(?<status>[^\.]+)\.(?<taskid>.+)$')
    (dimension taskid)
    (dimension status)
    (param gridboard.rowformat '<a href="../tasks/%1">%1</a>%{=match:%1:\.prd\.: <span class="label label-success">prod</span>:}')
   )
 )
)
