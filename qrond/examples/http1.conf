#(pf (version 1.0))
(config
 # tasks
 (taskgroup group1)
 (task task1(taskgroup group1)
  (command /qron/)
  (mean http)(target localhost)
  (trigger(cron 0/10 * * * * *))
  (param log.reply.onsuccess true)
  (param reply.validation.pattern "(?i)<hTml>")
  (setenv Test Value)
  (setenv Test2)
  (setenv Test Value3)
  (setenv Pragma no-cache)
  (setenv Cache-Control no-cache)
  (setenv Accept application/xml)
  (setenv User-Agent: qron)
  (setenv Host www.google.fr:80)
 )
 (task task2(taskgroup group1)
  (command /qron/)
  (mean http)(target localhost)
  (trigger(cron 0/10 * * * * *))
  (param method post)
  (setenv Test: Value5)
 )
 (task task3(taskgroup group1)
  (command /qron/)
  (mean http)(target localhost)
  (trigger(cron 0/10 * * * * *))
  (param method post)
  (param log.reply.maxsize 32)
  (setenv Test: %!taskid)
  (setenv Year "%{=date:yyyy}")
  (param user myuser)
  (param password mypassword)
  (param payload "<foo><bar/>%user %!taskinstanceid %{=random:6:1} %{=random:10} %{=random}</foo>")
  (onsuccess (http http://localhost/test1(param user foo)(param password password)))
  (onfailure
   (requesturl
    (address http://localhost/test2)
    (param user bar)
    (param password password)
    (param method post)
    "    payload 

"
    (param content-type application/binary)
   )
  )
 )
 (task task_404(taskgroup group1)
  (command /not/found)
  (mean http)(target localhost)
  (trigger(cron 0/10 * * * * *))
 )
 (task task_404_without_failure(taskgroup group1)
  (command /not/found)
  (mean http)(target localhost)
  (trigger(cron 0/10 * * * * *))
  (param return.code.404.success true)
 )
 (task task_host_not_found(taskgroup group1)
  (command /foo)
  (mean http)(target a-dummy-host)
  (trigger(cron 0/10 * * * * *))
 )
 (task redirect(taskgroup group1)
  (command /qron)
  (mean http)(target localhost)
  (param port 8083)
  (param follow-redirect true)
  #(param redirect-max 1)
 )

 # infrastructure
 (host localhost(hostname localhost))
 (host a-dummy-host(hostname a-dummy-host.nowhere))

 # log
 (log(level debug)(file "/tmp/qron-debug-%{=date:yyyyMMdd}.log")(unbuffered))
 (log(level info)(file "/tmp/qron-%{=date:yyyyMMdd}.log"))

 # alerts
 (alerts
   (subscription (pattern **)
         (url (address http://localhost:8086/testalert?alertid=%!alertid&p1=%p1)
              (emitmessage alertid:%!alertid)
              (nocancelnotify)
              (param p1 v1)
              (param method post)
         )
   )
 )
 (onstart (raisealert running.%!taskid))
 (onfinish (cancelalert running.%!taskid))
)
